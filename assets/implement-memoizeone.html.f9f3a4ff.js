import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,c as r,a as e,b as a,w as s,F as u,d as n,e as p,o as m}from"./app.22a70bca.js";const d={},h=e("h1",{id:"implement-memoizeone",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implement-memoizeone","aria-hidden":"true"},"#"),n(" implement memoizeOne()")],-1),_=e("h2",{id:"question",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),n(" Question")],-1),k=n("In problem "),f={href:"https://bigfrontend.dev/problem/implement-general-memoization-function",target:"_blank",rel:"noopener noreferrer"},b=n("14. Implement a general memoization function"),g=n(", you are asked to implement a memo function without space concern."),v=e("p",null,"But in reality, it could be a problem if cache bloats.",-1),y=n("You might need to restrict the cache capacity, just like "),x={href:"https://github.com/alexreardon/memoize-one",target:"_blank",rel:"noopener noreferrer"},z=n("memoize-one"),w=n(" , it only remembers the latest arguments and result."),q=e("p",null,[n("Please implement your own "),e("code",null,"memoizeOne()"),n(", it takes 2 arguments")],-1),C=e("ol",null,[e("li",null,"target function"),e("li",null,"(optional) a equality check function to compare current and last arguments")],-1),I=e("p",null,[n("Default equality check function should be a shallow comparison on array items with strict equal "),e("code",null,"==="),n(".")],-1),j=e("h2",{id:"code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#code","aria-hidden":"true"},"#"),n(" Code")],-1),E=e("div",{class:"language-javascript ext-js line-numbers-mode"},[e("pre",{class:"language-javascript"},[e("code",null,[e("span",{class:"token doc-comment comment"},[n(`/**
 * `),e("span",{class:"token keyword"},"@param"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("Function"),e("span",{class:"token punctuation"},"}")]),n(),e("span",{class:"token parameter"},"func"),n(`
 * `),e("span",{class:"token keyword"},"@param"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),e("span",{class:"token punctuation"},"("),n("args"),e("span",{class:"token operator"},":"),n(" any"),e("span",{class:"token punctuation"},"["),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},","),n(" newArgs"),e("span",{class:"token operator"},":"),n(" any"),e("span",{class:"token punctuation"},"["),e("span",{class:"token punctuation"},"]"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token operator"},"=>"),n(" boolean"),e("span",{class:"token punctuation"},"}")]),n(),e("span",{class:"token optional-parameter"},[e("span",{class:"token punctuation"},"["),e("span",{class:"token parameter"},"isEqual"),e("span",{class:"token punctuation"},"]")]),n(`
 * `),e("span",{class:"token keyword"},"@returns"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("any"),e("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`

`),e("span",{class:"token keyword"},"function"),n(),e("span",{class:"token function"},"memoizeOne"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[n("func"),e("span",{class:"token punctuation"},","),n(" isEqual")]),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token comment"},"// your code here"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=p('<h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2><ul><li><a href="./implement-general-memoization-function">Implement a general memoization function - <code>memo()</code></a></li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',3),F={href:"https://bigfrontend.dev/problem/implement-memoizeOne",target:"_blank",rel:"noopener noreferrer"},G=n("Source From");function N(O,V){const t=o("ExternalLinkIcon"),c=o("CodeGroupItem"),l=o("CodeGroup");return m(),r(u,null,[h,_,e("p",null,[k,e("a",f,[b,a(t)]),g]),v,e("p",null,[y,e("a",x,[z,a(t)]),w]),q,C,I,j,a(l,null,{default:s(()=>[a(c,{title:"javascript",active:""},{default:s(()=>[E]),_:1})]),_:1}),B,e("p",null,[e("a",F,[G,a(t)])])],64)}var A=i(d,[["render",N],["__file","implement-memoizeone.html.vue"]]);export{A as default};
