import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c as d,a as e,b as s,w as o,F as p,d as n,e as i,o as u}from"./app.22a70bca.js";const m={},h=e("h1",{id:"implement-btoa",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implement-btoa","aria-hidden":"true"},"#"),n(" implement btoa()")],-1),_=e("h2",{id:"question",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),n(" Question")],-1),k={href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa",target:"_blank",rel:"noopener noreferrer"},b=n("btoa()"),v=n(" accepts a binary string and returns a Base64-encoded ASCII string from it. Characters in a binary string are the ASCII character for each byte of the binary data."),g=n("Please read "),f={href:"https://en.wikipedia.org/wiki/Base64",target:"_blank",rel:"noopener noreferrer"},y=n("Base64 wiki"),x=n(" and implement your own "),w=e("code",null,"btoa()",-1),B=n("."),C=i(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">myBtoa</span><span class="token punctuation">(</span><span class="token string">&#39;BFE&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;QkZF&#39;</span>

<span class="token function">myBtoa</span><span class="token punctuation">(</span><span class="token string">&#39;BFE.dev&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;QkZFLmRldg==&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>note</strong></p><ol><li>Please don&#39;t use <code>window.btoa()</code> in your code.</li><li>The binary string passed to your function are all valid ASCII characters, there will be another problem on the general Base64 encoding/decoding.</li></ol><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,4),I=e("div",{class:"language-javascript ext-js line-numbers-mode"},[e("pre",{class:"language-javascript"},[e("code",null,[e("span",{class:"token doc-comment comment"},[n(`/**
 * `),e("span",{class:"token keyword"},"@param"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("string"),e("span",{class:"token punctuation"},"}")]),n(),e("span",{class:"token parameter"},"str"),n(` - binary string
 * `),e("span",{class:"token keyword"},"@returns"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("string"),e("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),e("span",{class:"token keyword"},"function"),n(),e("span",{class:"token function"},"myBtoa"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"str"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token comment"},"// your code here"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),S=e("pre",null,[e("code",null,`::: code-group-item typescript
`)],-1),j=e("div",{class:"language-typescript ext-ts line-numbers-mode"},[e("pre",{class:"language-typescript"},[e("code",null,[e("span",{class:"token keyword"},"function"),n(),e("span",{class:"token function"},"myBtoa"),e("span",{class:"token punctuation"},"("),n("str"),e("span",{class:"token operator"},":"),n(),e("span",{class:"token builtin"},"string"),e("span",{class:"token punctuation"},")"),e("span",{class:"token operator"},":"),n(),e("span",{class:"token builtin"},"string"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token comment"},"// your code here"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),F=e("p",null,":::",-1),E=i('<h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2><ul><li><a href="./implement-atob">implement atob()</a></li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',3),G={href:"https://bigfrontend.dev/problem/implement-btoa",target:"_blank",rel:"noopener noreferrer"},A=n("Source From");function N(V,L){const a=t("ExternalLinkIcon"),r=t("CodeGroupItem"),c=t("CodeGroup");return u(),d(p,null,[h,_,e("p",null,[e("a",k,[b,s(a)]),v]),e("p",null,[g,e("a",f,[y,s(a)]),x,w,B]),C,s(c,null,{default:o(()=>[s(r,{title:"javascript",active:""},{default:o(()=>[I]),_:1}),S,j,F]),_:1}),E,e("p",null,[e("a",G,[A,s(a)])])],64)}var W=l(m,[["render",N],["__file","implement-btoa.html.vue"]]);export{W as default};
