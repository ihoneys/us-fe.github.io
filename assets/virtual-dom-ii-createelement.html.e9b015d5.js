import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c as r,a as n,b as a,w as l,F as u,d as s,e as o,o as d}from"./app.22a70bca.js";const m={},k=n("h1",{id:"virtual-dom-ii-createelement",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#virtual-dom-ii-createelement","aria-hidden":"true"},"#"),s(" Virtual DOM II - createElement")],-1),h=n("h2",{id:"question",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),s(" Question")],-1),v=s("This is a follow-up on "),b={href:"https://bigfrontend.dev/problem/Virtual-DOM-I",target:"_blank",rel:"noopener noreferrer"},_=s("113. Virtual DOM I"),f=s("."),g=s("Suppose you have solved above problem, now let's take a look at "),y={href:"https://reactjs.org/docs/react-api.html#createelement",target:"_blank",rel:"noopener noreferrer"},M=s("React.createElement()"),I=s(":"),w=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>
  type<span class="token punctuation">,</span>
  <span class="token punctuation">[</span>props<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token operator">...</span>children<span class="token punctuation">]</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>First argument is type, it could be set to Custom Component, but here in this problem, it would only be HTML tag name</li><li>Second argument is props, here in this problem, it would only be the (common) camelCased HTML attributes</li><li>the rest arguments are the children, which in React supports many data types, but in this problem, it only has the element type of MyElement, or string for TextNode.</li></ol>`,2),x=n("strong",null,"You are asked to create your own createElement() and render()",-1),E=s(", so that following code could create the exact HTMLElement in "),V={href:"https://bigfrontend.dev/problem/Virtual-DOM-I",target:"_blank",rel:"noopener noreferrer"},j=s("113. Virtual DOM I"),D=s("."),C=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> h <span class="token operator">=</span> createElement

<span class="token function">render</span><span class="token punctuation">(</span><span class="token function">h</span><span class="token punctuation">(</span>
  <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39; this is &#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">h</span><span class="token punctuation">(</span>
    <span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&#39;paragraph&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39; a &#39;</span><span class="token punctuation">,</span>
    <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39; button &#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39; from &#39;</span><span class="token punctuation">,</span>
    <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> 
      <span class="token punctuation">{</span> <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&#39;https://bfe.dev&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
      <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;BFE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string">&#39;.dev&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Notes</strong></p>`,2),O=s("The goal of this problem is not to create the replica of React implementation, you can have your own object representation format other than the one in "),N={href:"https://bigfrontend.dev/problem/Virtual-DOM-I",target:"_blank",rel:"noopener noreferrer"},T=s("113. Virtual DOM I"),F=s("."),L=n("li",null,[n("p",null,"Details about ref, key are ignored here, they will be put in other problems. Re-render is not covered here, it will be in another problem as well.")],-1),S=n("h2",{id:"code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#code","aria-hidden":"true"},"#"),s(" Code")],-1),R=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},`/**
 * MyElement is the type your implementation supports
 *
 * type MyNode = MyElement | string
 */`),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" string "),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"type"),s(` - valid HTML tag name
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" object "),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token optional-parameter"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token parameter"},"props"),n("span",{class:"token punctuation"},"]")]),s(` - properties.
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token operator"},"..."),s("MyNode"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token optional-parameter"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token parameter"},"children"),n("span",{class:"token punctuation"},"]")]),s(` - elements as rest arguments
 * `),n("span",{class:"token keyword"},"@return"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" MyElement "),n("span",{class:"token punctuation"},"}")]),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("type"),n("span",{class:"token punctuation"},","),s(" props"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"..."),s("children")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`


`),n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" MyElement "),n("span",{class:"token punctuation"},"}")]),s(`
 * `),n("span",{class:"token keyword"},"@returns"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" HTMLElement "),n("span",{class:"token punctuation"},"}")]),s(` 
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"myElement"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=o('<h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2><ul><li><a href="./Virtual-DOM-I">Virtual DOM I</a></li><li><a href="./virtual-DOM-III-Functional-Component">Virtual DOM III - Functional Component</a></li><li><a href="./virtual-dom-iv-jsx-1">Virtual DOM IV - JSX 1</a></li><li><a href="./virtual-dom-v-jsx-2">Virtual DOM V - JSX 2</a></li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',3),B={href:"https://bigfrontend.dev/problem/virtual-dom-II-createElement",target:"_blank",rel:"noopener noreferrer"},G=s("Source From");function q(J,X){const e=t("ExternalLinkIcon"),c=t("CodeGroupItem"),i=t("CodeGroup");return d(),r(u,null,[k,h,n("blockquote",null,[n("p",null,[v,n("a",b,[_,a(e)]),f])]),n("p",null,[g,n("a",y,[M,a(e)]),I]),w,n("p",null,[x,E,n("a",V,[j,a(e)]),D]),C,n("ol",null,[n("li",null,[n("p",null,[O,n("a",N,[T,a(e)]),F])]),L]),S,a(i,null,{default:l(()=>[a(c,{title:"javascript",active:""},{default:l(()=>[R]),_:1})]),_:1}),H,n("p",null,[n("a",B,[G,a(e)])])],64)}var z=p(m,[["render",q],["__file","virtual-dom-ii-createelement.html.vue"]]);export{z as default};
