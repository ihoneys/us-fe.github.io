import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,c as p,a as e,b as a,w as t,F as d,d as n,e as r,o as u}from"./app.22a70bca.js";const m={},b=e("h1",{id:"implement-observable-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implement-observable-from","aria-hidden":"true"},"#"),n(" implement Observable.from()")],-1),h=e("h2",{id:"question",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),n(" Question")],-1),_=n("This is a follow-up on "),k={href:"https://bigfrontend.dev/problem/create-an-Observable",target:"_blank",rel:"noopener noreferrer"},v=n("57. create an Observable"),f=n("."),g=n("Suppose you have solved "),O={href:"https://bigfrontend.dev/problem/create-an-Observable",target:"_blank",rel:"noopener noreferrer"},x=n("57. create an Observable"),y=n(", here you are asked to implement a creation operator "),j=e("code",null,"from()",-1),C=n("."),w=n("From the "),S={href:"https://rxjs-dev.firebaseapp.com/api/index/function/from",target:"_blank",rel:"noopener noreferrer"},F=n("document"),I=n(", "),N=e("code",null,"from()",-1),q=r(`<blockquote><p>Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.</p></blockquote><p>Your <code>from()</code> should accept all above types.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note</strong></p><ol><li>Observable is already given for you, no need to create it.</li><li>for the problem here, <code>Observable-like</code> means <code>Observable instance</code>. Though in real-world you should check <code>Symbol.observable</code></li></ol><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,6),G=e("div",{class:"language-javascript ext-js line-numbers-mode"},[e("pre",{class:"language-javascript"},[e("code",null,[e("span",{class:"token doc-comment comment"},[n(`/**
 * `),e("span",{class:"token keyword"},"@param"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("Array "),e("span",{class:"token operator"},"|"),n(" ArrayLike "),e("span",{class:"token operator"},"|"),n(" Promise "),e("span",{class:"token operator"},"|"),n(" Iterable "),e("span",{class:"token operator"},"|"),n(" Observable"),e("span",{class:"token punctuation"},"}")]),n(),e("span",{class:"token parameter"},"input"),n(`
 * `),e("span",{class:"token keyword"},"@return"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("Observable"),e("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),e("span",{class:"token keyword"},"function"),n(),e("span",{class:"token function"},"from"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"input"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token comment"},"// your code here"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),V=r('<h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2><ul><li><a href="./create-an-Observable">create an Observable</a></li><li><a href="./implement-Observable-Subject">implement Observable Subject</a></li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',3),A={href:"https://bigfrontend.dev/problem/implement-Observable-from",target:"_blank",rel:"noopener noreferrer"},B=n("Source From");function E(L,T){const s=o("ExternalLinkIcon"),c=o("CodeGroupItem"),l=o("CodeGroup");return u(),p(d,null,[b,h,e("p",null,[_,e("a",k,[v,a(s)]),f]),e("p",null,[g,e("a",O,[x,a(s)]),y,j,C]),e("p",null,[w,e("a",S,[F,a(s)]),I,N]),q,a(l,null,{default:t(()=>[a(c,{title:"javascript",active:""},{default:t(()=>[G]),_:1})]),_:1}),V,e("p",null,[e("a",A,[B,a(s)])])],64)}var R=i(m,[["render",E],["__file","implement-observable-from.html.vue"]]);export{R as default};
