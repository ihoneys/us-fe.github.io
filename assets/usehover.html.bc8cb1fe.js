import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,c as l,b as a,w as o,a as n,F as i,e as u,d as s,o as d}from"./app.22a70bca.js";const k={},m=u(`<h1 id="usehover" tabindex="-1"><a class="header-anchor" href="#usehover" aria-hidden="true">#</a> useHover()</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><p>It is common to see conditional rendering based on hover state of some element.</p><p>We can achive it by CSS pseduo class <code>:hover</code>, but for more complex cases it might be better to have state controlled by script.</p><p>Now you are asked to create a <code>useHover()</code> hook.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>ref<span class="token punctuation">,</span> isHovered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useHover</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div ref<span class="token operator">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>isHovered <span class="token operator">?</span> <span class="token string">&#39;hovered&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;not hovered&#39;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,7),v=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Ref "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'react'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"useHover"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),n("span",{class:"token constant"},"T"),s(),n("span",{class:"token keyword"},"extends"),s(" HTMLElement"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s("Ref"),n("span",{class:"token operator"},"<"),n("span",{class:"token constant"},"T"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// if you want to try your code on the right panel"),s(`
`),n("span",{class:"token comment"},"// remember to export App() component like below"),s(`

`),n("span",{class:"token comment"},"// export function App() {"),s(`
`),n("span",{class:"token comment"},"//   return <div>your app</div>"),s(`
`),n("span",{class:"token comment"},"// }"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),s(" Source")],-1),b={href:"https://bigfrontend.dev/react/useHover",target:"_blank",rel:"noopener noreferrer"},f=s("Source From");function _(g,y){const t=e("CodeGroupItem"),c=e("CodeGroup"),r=e("ExternalLinkIcon");return d(),l(i,null,[m,a(c,null,{default:o(()=>[a(t,{title:"typescript",active:""},{default:o(()=>[v]),_:1})]),_:1}),h,n("p",null,[n("a",b,[f,a(r)])])],64)}var C=p(k,[["render",_],["__file","usehover.html.vue"]]);export{C as default};
