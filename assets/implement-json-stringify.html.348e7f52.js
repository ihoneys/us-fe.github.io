import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as a,c as d,a as e,b as t,w as o,F as p,d as n,e as r,o as u}from"./app.22a70bca.js";const h={},m=e("h1",{id:"implement-json-stringify",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implement-json-stringify","aria-hidden":"true"},"#"),n(" implement JSON.stringify()")],-1),_=e("h2",{id:"question",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),n(" Question")],-1),f=e("p",null,[n("I believe you've used "),e("code",null,"JSON.stringify()"),n(" before, do you know the details of how it handles arbitrary data?")],-1),k=n("Please have a guess on the details and then take a look at the "),y={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"},g=n("explanation on MDN"),b=n(", it is actually pretty complex."),v=r('<p>In this problem, you are asked to implement your own version of <code>JSON.stringify()</code>.</p><p>In a real interview, you are not expected to cover all the cases, just decide the scope with interviewer. But for a goal of practicing, your code here will be tested against a lot of data types. Please try to cover as much as you can.</p><p>Attention to the circular reference.</p><p><em>note</em></p><p><code>JSON.stringify()</code> support two more parameters which is not required here.</p><p><strong>Don&#39;t use JSON.stringify() in your code here</strong>, it doesn&#39;t help you practicing coding skills.</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>',7),x=e("div",{class:"language-javascript ext-js line-numbers-mode"},[e("pre",{class:"language-javascript"},[e("code",null,[e("span",{class:"token doc-comment comment"},[n(`/**
 * `),e("span",{class:"token keyword"},"@param"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("any"),e("span",{class:"token punctuation"},"}")]),n(),e("span",{class:"token parameter"},"data"),n(`
 * `),e("span",{class:"token keyword"},"@return"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("string"),e("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),e("span",{class:"token keyword"},"function"),n(),e("span",{class:"token function"},"stringify"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"data"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token comment"},"// your code here"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),S=r('<h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2><ul><li><a href="./implement-JSON-parse">implement JSON.parse()</a></li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',3),w={href:"https://bigfrontend.dev/problem/implement-JSON-stringify",target:"_blank",rel:"noopener noreferrer"},N=n("Source From");function J(O,j){const s=a("ExternalLinkIcon"),i=a("CodeGroupItem"),c=a("CodeGroup");return u(),d(p,null,[m,_,f,e("p",null,[k,e("a",y,[g,t(s)]),b]),v,t(c,null,{default:o(()=>[t(i,{title:"javascript",active:""},{default:o(()=>[x]),_:1})]),_:1}),S,e("p",null,[e("a",w,[N,t(s)])])],64)}var G=l(h,[["render",J],["__file","implement-json-stringify.html.vue"]]);export{G as default};
