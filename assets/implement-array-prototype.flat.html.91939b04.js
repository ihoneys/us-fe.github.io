import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,c as r,a as n,b as a,w as o,F as i,d as s,e as u,o as d}from"./app.22a70bca.js";const k={},m=n("h1",{id:"implement-array-prototype-flat",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#implement-array-prototype-flat","aria-hidden":"true"},"#"),s(" implement Array.prototype.flat()")],-1),b=n("h2",{id:"question",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),s(" Question")],-1),v=s("There is already "),h={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat",target:"_blank",rel:"noopener noreferrer"},_=s("Array.prototype.flat()"),f=s(" in JavaScript (ES2019), which reduces the nesting of Array."),y=u(`<p>Could you manage to implement your own one?</p><p>Here is an example to illustrate</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">flat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, 2, 3, [4]]</span>

<span class="token function">flat</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// [1, 2, 3, [4]]</span>

<span class="token function">flat</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// [1, 2, 3, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>follow up</strong></p><p>Are you able to solve it both recursively and iteratively?</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,6),g=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" Array "),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"arr"),s(`
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" number "),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"depth"),s(`
 * `),n("span",{class:"token keyword"},"@returns"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" Array "),n("span",{class:"token punctuation"},"}")]),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"flat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("arr"),n("span",{class:"token punctuation"},","),s(" depth "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your imeplementation here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("pre",null,[n("code",null,`::: code-group-item typescript
`)],-1),w=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"Func"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("arr"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"Array"),n("span",{class:"token operator"},"<"),n("span",{class:"token builtin"},"any"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(" depth"),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token builtin"},"Array"),n("span",{class:"token operator"},"<"),n("span",{class:"token builtin"},"any"),n("span",{class:"token operator"},">"),s(`

`),n("span",{class:"token keyword"},"const"),s(" flat"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function-variable function"},"Func"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),s("arr"),n("span",{class:"token punctuation"},","),s(" depth "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your imeplementation here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("p",null,":::",-1),j=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),s(" Source")],-1),C={href:"https://bigfrontend.dev/problem/implement-Array-prototype.flat",target:"_blank",rel:"noopener noreferrer"},S=s("Source From");function F(G,E){const t=e("ExternalLinkIcon"),c=e("CodeGroupItem"),p=e("CodeGroup");return d(),r(i,null,[m,b,n("p",null,[v,n("a",h,[_,a(t)]),f]),y,a(p,null,{default:o(()=>[a(c,{title:"javascript",active:""},{default:o(()=>[g]),_:1}),x,w,A]),_:1}),j,n("p",null,[n("a",C,[S,a(t)])])],64)}var V=l(k,[["render",F],["__file","implement-array-prototype.flat.html.vue"]]);export{V as default};
