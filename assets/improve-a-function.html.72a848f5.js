import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as a,c as i,b as e,w as t,a as n,F as r,e as u,d as s,o as k}from"./app.22a70bca.js";const d={},m=u(`<h1 id="improve-a-function" tabindex="-1"><a class="header-anchor" href="#improve-a-function" aria-hidden="true">#</a> Improve a function</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token comment">// Given an input of array, </span>
<span class="token comment">// which is made of items with &gt;= 3 properties</span>

<span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;tv&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;silver&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;phone&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span> 

<span class="token comment">// an exclude array made of key value pair</span>
<span class="token keyword">const</span> excludes <span class="token operator">=</span> <span class="token punctuation">[</span> 
  <span class="token punctuation">{</span><span class="token literal-property property">k</span><span class="token operator">:</span> <span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token string">&#39;silver&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token punctuation">{</span><span class="token literal-property property">k</span><span class="token operator">:</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token string">&#39;tv&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token operator">...</span>
<span class="token punctuation">]</span> 

<span class="token keyword">function</span> <span class="token function">excludeItems</span><span class="token punctuation">(</span><span class="token parameter">items<span class="token punctuation">,</span> excludes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  excludes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token parameter">pair</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
    items <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">[</span>pair<span class="token punctuation">.</span>k<span class="token punctuation">]</span> <span class="token operator">===</span> item<span class="token punctuation">[</span>pair<span class="token punctuation">.</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
 
  <span class="token keyword">return</span> items
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>What does this function <code>excludeItems</code> do?</li><li>Is this function working as expected ?</li><li>What is the time complexity of this function?</li><li>How would you optimize it ?</li></ol><p><em>note</em></p><p>we only judge by the result, not the time cost. please submit the best approach you can.</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,7),v=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("object"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"items"),s(`
 * `),n("span",{class:"token keyword"},"@excludes"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" Array"),n("span",{class:"token punctuation"},"<"),s(),n("span",{class:"token punctuation"},"{"),s("k"),n("span",{class:"token operator"},":"),s(" string"),n("span",{class:"token punctuation"},","),s(" v"),n("span",{class:"token operator"},":"),s(" any"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"}")]),s(` excludes
 */`)]),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("object"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"items"),s(`
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s(" Array"),n("span",{class:"token punctuation"},"<"),s(),n("span",{class:"token punctuation"},"{"),s("k"),n("span",{class:"token operator"},":"),s(" string"),n("span",{class:"token punctuation"},","),s(" v"),n("span",{class:"token operator"},":"),s(" any"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"excludes"),s(`
 * `),n("span",{class:"token keyword"},"@return"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("object"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"excludeItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("items"),n("span",{class:"token punctuation"},","),s(" excludes")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),s(" Source")],-1),y={href:"https://bigfrontend.dev/problem/improve-a-function",target:"_blank",rel:"noopener noreferrer"},h=s("Source From");function f(g,_){const p=a("CodeGroupItem"),o=a("CodeGroup"),c=a("ExternalLinkIcon");return k(),i(r,null,[m,e(o,null,{default:t(()=>[e(p,{title:"javascript",active:""},{default:t(()=>[v]),_:1})]),_:1}),b,n("p",null,[n("a",y,[h,e(c)])])],64)}var j=l(d,[["render",f],["__file","improve-a-function.html.vue"]]);export{j as default};
