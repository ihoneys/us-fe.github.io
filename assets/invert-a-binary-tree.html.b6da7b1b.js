import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c as i,a as e,b as s,w as o,F as d,d as n,o as u}from"./app.22a70bca.js";const p={},m=e("h1",{id:"invert-a-binary-tree",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#invert-a-binary-tree","aria-hidden":"true"},"#"),n(" invert a binary tree")],-1),h=e("h2",{id:"question",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),n(" Question")],-1),_=e("p",null,"Can you invert a binary tree and get an offer from Google?",-1),b=e("p",null,"Google: 90% of our engineers use the software you wrote (Homebrew), but you can\u2019t invert a binary tree on a whiteboard so fuck off.",-1),f=n("\u2014 Max Howell (@mxcl) "),v={href:"https://twitter.com/mxcl/status/608682016205344768?ref_src=twsrc%5Etfw",target:"_blank",rel:"noopener noreferrer"},k=n("June 10, 2015"),g=e("p",null,"Inverting a node means swapping its left child and right child. You need to apply this to all nodes. As following figure illustrates.",-1),y=e("p",null,[e("img",{src:"https://cdn.bfe.dev/bfe/img/12BVC9SRg5VfcADGpAjNN6ONgh8BlrDC_1068x546_1597951636139.png",alt:"",loading:"lazy"})],-1),x=e("h2",{id:"code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#code","aria-hidden":"true"},"#"),n(" Code")],-1),w=e("div",{class:"language-javascript ext-js line-numbers-mode"},[e("pre",{class:"language-javascript"},[e("code",null,[e("span",{class:"token comment"},"// This is the type for the node"),n(`
`),e("span",{class:"token comment"},"// type Node = null | {"),n(`
`),e("span",{class:"token comment"},"//   value: number"),n(`
`),e("span",{class:"token comment"},"//   left: Node"),n(`
`),e("span",{class:"token comment"},"//   right: Node"),n(`
`),e("span",{class:"token comment"},"// }"),n(`


`),e("span",{class:"token doc-comment comment"},[n(`/**
 * `),e("span",{class:"token keyword"},"@param"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("Node"),e("span",{class:"token punctuation"},"}")]),n(),e("span",{class:"token parameter"},"node"),n(`
 * `),e("span",{class:"token keyword"},"@returns"),n(),e("span",{class:"token class-name"},[e("span",{class:"token punctuation"},"{"),n("Node"),e("span",{class:"token punctuation"},"}")]),n(`
 */`)]),n(`
`),e("span",{class:"token keyword"},"function"),n(),e("span",{class:"token function"},"invert"),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"node"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{"),n(`
  `),e("span",{class:"token comment"},"// your code here"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),N=e("h2",{id:"source",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),n(" Source")],-1),C={href:"https://bigfrontend.dev/problem/invert-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},G=n("Source From");function B(j,I){const a=t("ExternalLinkIcon"),r=t("CodeGroupItem"),c=t("CodeGroup");return u(),i(d,null,[m,h,_,e("blockquote",null,[b,e("p",null,[f,e("a",v,[k,s(a)])])]),g,y,x,s(c,null,{default:o(()=>[s(r,{title:"javascript",active:""},{default:o(()=>[w]),_:1})]),_:1}),N,e("p",null,[e("a",C,[G,s(a)])])],64)}var E=l(p,[["render",B],["__file","invert-a-binary-tree.html.vue"]]);export{E as default};
