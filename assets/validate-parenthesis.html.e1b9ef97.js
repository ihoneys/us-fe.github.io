import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as a,c as r,b as s,w as t,a as n,F as d,e as p,d as e,o as u}from"./app.22a70bca.js";const m={},v=p(`<h1 id="validate-string-of-parentheses" tabindex="-1"><a class="header-anchor" href="#validate-string-of-parentheses" aria-hidden="true">#</a> validate string of parentheses</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><p>Given a string containing only following characters:</p><ol><li>parentheses : <code>(</code> or <code>)</code></li><li>brackets: <code>[</code> or <code>]</code></li><li>braces: <code>{</code> or <code>}</code></li></ol><p>write a function to <strong>determine if they are valid</strong>.</p><p>By &#39;valid&#39;, it means all should be rightly paired, and with the valid order.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token function">validate</span><span class="token punctuation">(</span><span class="token string">&#39;{}[]()&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// true</span>

<span class="token function">validate</span><span class="token punctuation">(</span><span class="token string">&#39;{[()]}&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// true</span>

<span class="token function">validate</span><span class="token punctuation">(</span><span class="token string">&#39;{[}]&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// false, they are not in the right order</span>

<span class="token function">validate</span><span class="token punctuation">(</span><span class="token string">&#39;{}}&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// false, last \`}\` is not paired with \`{\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Follow-up</strong></p><p>What is time &amp; space complexity of your approach ? Can you do it better?</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,10),h=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * `),n("span",{class:"token keyword"},"@param"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("string"),n("span",{class:"token punctuation"},"}")]),e(),n("span",{class:"token parameter"},"str"),e(`
 * `),n("span",{class:"token keyword"},"@return"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("boolean"),n("span",{class:"token punctuation"},"}")]),e(` 
 */`)]),e(`
`),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token function"},"validate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"str"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token comment"},"// your code here"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),k=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),e(" Source")],-1),b={href:"https://bigfrontend.dev/problem/validate-parenthesis",target:"_blank",rel:"noopener noreferrer"},f=e("Source From");function _(g,x){const o=a("CodeGroupItem"),i=a("CodeGroup"),c=a("ExternalLinkIcon");return u(),r(d,null,[v,s(i,null,{default:t(()=>[s(o,{title:"javascript",active:""},{default:t(()=>[h]),_:1})]),_:1}),k,n("p",null,[n("a",b,[f,s(c)])])],64)}var C=l(m,[["render",_],["__file","validate-parenthesis.html.vue"]]);export{C as default};
