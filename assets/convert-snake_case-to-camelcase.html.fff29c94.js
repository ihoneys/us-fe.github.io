import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c as l,a as n,b as e,w as o,F as p,d as s,e as d,o as u}from"./app.22a70bca.js";const _={},m=n("h1",{id:"convert-snake-case-to-camelcase",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#convert-snake-case-to-camelcase","aria-hidden":"true"},"#"),s(" convert snake_case to camelCase")],-1),k=n("h2",{id:"question",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),s(" Question")],-1),v=s("Do you prefer "),h={href:"https://en.wikipedia.org/wiki/Snake_case",target:"_blank",rel:"noopener noreferrer"},b=s("snake_case"),f=s(" or "),g={href:"https://en.wikipedia.org/wiki/Camel_case",target:"_blank",rel:"noopener noreferrer"},C=s("camelCase"),x=s(" ?"),w=d(`<p>Anyway, please create a function to convert snake_case to camcelCase.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token function">snakeToCamel</span><span class="token punctuation">(</span><span class="token string">&#39;snake_case&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// &#39;snakeCase&#39;</span>
<span class="token function">snakeToCamel</span><span class="token punctuation">(</span><span class="token string">&#39;is_flag_on&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// &#39;isFlagOn&#39;</span>
<span class="token function">snakeToCamel</span><span class="token punctuation">(</span><span class="token string">&#39;is_IOS_or_Android&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// &#39;isIOSOrAndroid&#39;</span>
<span class="token function">snakeToCamel</span><span class="token punctuation">(</span><span class="token string">&#39;_first_underscore&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// &#39;_firstUnderscore&#39;</span>
<span class="token function">snakeToCamel</span><span class="token punctuation">(</span><span class="token string">&#39;last_underscore_&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// &#39;lastUnderscore_&#39;</span>
<span class="token function">snakeToCamel</span><span class="token punctuation">(</span><span class="token string">&#39;_double__underscore_&#39;</span><span class="token punctuation">)</span> 
<span class="token comment">// &#39;_double__underscore_&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>contiguous underscore <code>__</code>, leading underscore <code>_a</code>, and trailing underscors <code>a_</code> should be kept untouched.</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,4),T=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("string"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"str"),s(`
 * `),n("span",{class:"token keyword"},"@return"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("string"),n("span",{class:"token punctuation"},"}")]),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"snakeToCamel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"str"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),s(" Source")],-1),y={href:"https://bigfrontend.dev/problem/convert-snake_case-to-camelCase",target:"_blank",rel:"noopener noreferrer"},S=s("Source From");function I(F,G){const a=t("ExternalLinkIcon"),c=t("CodeGroupItem"),i=t("CodeGroup");return u(),l(p,null,[m,k,n("p",null,[v,n("a",h,[b,e(a)]),f,n("a",g,[C,e(a)]),x]),w,e(i,null,{default:o(()=>[e(c,{title:"javascript",active:""},{default:o(()=>[T]),_:1})]),_:1}),j,n("p",null,[n("a",y,[S,e(a)])])],64)}var V=r(_,[["render",I],["__file","convert-snake_case-to-camelcase.html.vue"]]);export{V as default};
