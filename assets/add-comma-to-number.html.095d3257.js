import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as s,c as l,b as e,w as t,a as n,F as i,e as d,d as a,o as u}from"./app.22a70bca.js";const m={},k=d(`<h1 id="add-comma-to-number" tabindex="-1"><a class="header-anchor" href="#add-comma-to-number" aria-hidden="true">#</a> add comma to number</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><p>Given a number, please create a function to add commas as thousand separators.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">addComma</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// &#39;1&#39;</span>
<span class="token function">addComma</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token comment">// &#39;1,000&#39;</span>
<span class="token function">addComma</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12345678</span><span class="token punctuation">)</span> <span class="token comment">// &#39;-12,345,678&#39;</span>
<span class="token function">addComma</span><span class="token punctuation">(</span><span class="token number">12345678.12345</span><span class="token punctuation">)</span> <span class="token comment">// &#39;12,345,678.12345&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Input are all valid numbers.</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,6),h=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[a(`/**
 * `),n("span",{class:"token keyword"},"@param"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),a("number"),n("span",{class:"token punctuation"},"}")]),a(),n("span",{class:"token parameter"},"num"),a(`
 * `),n("span",{class:"token keyword"},"@return"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),a("string"),n("span",{class:"token punctuation"},"}")]),a(`
 */`)]),a(`
`),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"addComma"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"num"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// your code here"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),a(" Source")],-1),v={href:"https://bigfrontend.dev/problem/add-comma-to-number",target:"_blank",rel:"noopener noreferrer"},_=a("Source From");function f(x,C){const o=s("CodeGroupItem"),c=s("CodeGroup"),r=s("ExternalLinkIcon");return u(),l(i,null,[k,e(c,null,{default:t(()=>[e(o,{title:"javascript",active:""},{default:t(()=>[h]),_:1})]),_:1}),b,n("p",null,[n("a",v,[_,e(r)])])],64)}var w=p(m,[["render",f],["__file","add-comma-to-number.html.vue"]]);export{w as default};
