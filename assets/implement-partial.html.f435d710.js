import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c as i,a as n,b as a,w as o,F as r,d as s,e as u,o as d}from"./app.22a70bca.js";const k={},m=n("h1",{id:"implement-partial",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#implement-partial","aria-hidden":"true"},"#"),s(" implement _.partial()")],-1),_=n("h2",{id:"question",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),s(" Question")],-1),h={href:"https://lodash.com/docs/4.17.15#partial",target:"_blank",rel:"noopener noreferrer"},b=s("_.partial()"),v=s(" works like "),f={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",target:"_blank",rel:"noopener noreferrer"},g=s("Function.prototype.bind()"),y=s(" but "),x=n("code",null,"this",-1),w=s(" is not bound."),C=u(`<p>please create your own <code>partial()</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> args

<span class="token keyword">const</span> func123 <span class="token operator">=</span> <span class="token function">partial</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token function">func123</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token comment">// [1,2,3,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It should also support placeholder.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> _ <span class="token operator">=</span> partial<span class="token punctuation">.</span>placeholder
<span class="token keyword">const</span> func1_3 <span class="token operator">=</span> <span class="token function">partial</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> _<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>

<span class="token function">func1_3</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token comment">// [1,2,3,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,5),F=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("Function"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"func"),s(`
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"args"),s(`
 * `),n("span",{class:"token keyword"},"@returns"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("Function"),n("span",{class:"token punctuation"},"}")]),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"partial"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("func"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"..."),s("args")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),s(" Source")],-1),G={href:"https://bigfrontend.dev/problem/implement-partial",target:"_blank",rel:"noopener noreferrer"},I=s("Source From");function S(N,V){const e=t("ExternalLinkIcon"),c=t("CodeGroupItem"),p=t("CodeGroup");return d(),i(r,null,[m,_,n("p",null,[n("a",h,[b,a(e)]),v,n("a",f,[g,a(e)]),y,x,w]),C,a(p,null,{default:o(()=>[a(c,{title:"javascript",active:""},{default:o(()=>[F]),_:1})]),_:1}),j,n("p",null,[n("a",G,[I,a(e)])])],64)}var q=l(k,[["render",S],["__file","implement-partial.html.vue"]]);export{q as default};
