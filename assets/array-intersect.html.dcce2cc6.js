import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{r as s,c as l,b as e,w as t,a as n,F as p,e as u,d as a,o as d}from"./app.22a70bca.js";const k={},m=u('<h1 id="intersection-of-unsorted-arrays" tabindex="-1"><a class="header-anchor" href="#intersection-of-unsorted-arrays" aria-hidden="true">#</a> Intersection of unsorted arrays</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><p>Given two arrays, find the intersection(items occur in both arrays)</p><ol><li>arrays are not sorted, and might have duplicates.</li><li>you can modify the arrays</li><li>you can return the items in any order, but without duplicates.</li></ol><p>This is an easy problem, What is the time &amp; space complexity of your approach?</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>',6),h=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[a(`/**
 * `),n("span",{class:"token keyword"},"@param"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),a("any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),a(),n("span",{class:"token parameter"},"arr1"),a(`
 * `),n("span",{class:"token keyword"},"@param"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),a("any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),a(),n("span",{class:"token parameter"},"arr2"),a(`
 * `),n("span",{class:"token keyword"},"@returns"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),a("any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),a(`
 */`)]),a(`
`),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"getIntersection"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("arr1"),n("span",{class:"token punctuation"},","),a(" arr2")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// your code here"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("pre",null,[n("code",null,`::: code-group-item typescript
`)],-1),y=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"getIntersection"),n("span",{class:"token punctuation"},"("),a("arr1"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" arr2"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// your code here"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("p",null,":::",-1),f=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),a(" Source")],-1),v={href:"https://bigfrontend.dev/problem/array-intersect",target:"_blank",rel:"noopener noreferrer"},g=a("Source From");function x(w,I){const o=s("CodeGroupItem"),c=s("CodeGroup"),r=s("ExternalLinkIcon");return d(),l(p,null,[m,e(c,null,{default:t(()=>[e(o,{title:"javascript",active:""},{default:t(()=>[h]),_:1}),_,y,b]),_:1}),f,n("p",null,[n("a",v,[g,e(r)])])],64)}var j=i(k,[["render",x],["__file","array-intersect.html.vue"]]);export{j as default};
