import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,c as l,a as n,b as a,w as o,F as u,d as s,e as r,o as d}from"./app.22a70bca.js";const m={},k=n("h1",{id:"implement-jest-spyon",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#implement-jest-spyon","aria-hidden":"true"},"#"),s(" implement "),n("code",null,"jest.spyOn()")],-1),h=n("h2",{id:"question",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),s(" Question")],-1),v=n("p",null,[s("If you did unit test before, you must be familiar with "),n("code",null,"Spy"),s(".")],-1),b=s("You are asked to create a "),_=n("code",null,"spyOn(object, methodName)",-1),f=s(", which works the same as "),y={href:"https://jestjs.io/docs/en/jest-object#jestspyonobject-methodname",target:"_blank",rel:"noopener noreferrer"},j=s("jest.spyOn()"),g=s("."),x=r(`<p>To make it simple, here are the 2 requirements of <code>spyOn</code></p><ol><li>original method should be called when spied one is called</li><li>spy should have a <code>calls</code> array, which holds all the arguments in each call.</li></ol><p>Code to explain everything.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
   data<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
   <span class="token function">increment</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">+=</span> num
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> spy <span class="token operator">=</span> <span class="token function">spyOn</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;increment&#39;</span><span class="token punctuation">)</span>

obj<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token comment">// 2</span>

obj<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token comment">// 4</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>spy<span class="token punctuation">.</span>calls<span class="token punctuation">)</span>
<span class="token comment">// [ [1], [2] ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,5),w=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("object"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"obj"),s(`
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("string"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"methodName"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"spyOn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("obj"),n("span",{class:"token punctuation"},","),s(" methodName")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),s(" Source")],-1),N={href:"https://bigfrontend.dev/problem/implement-spyOn",target:"_blank",rel:"noopener noreferrer"},O=s("Source From");function I(S,G){const t=e("ExternalLinkIcon"),c=e("CodeGroupItem"),p=e("CodeGroup");return d(),l(u,null,[k,h,v,n("p",null,[b,_,f,n("a",y,[j,a(t)]),g]),x,a(p,null,{default:o(()=>[a(c,{title:"javascript",active:""},{default:o(()=>[w]),_:1})]),_:1}),C,n("p",null,[n("a",N,[O,a(t)])])],64)}var B=i(m,[["render",I],["__file","implement-spyon.html.vue"]]);export{B as default};
