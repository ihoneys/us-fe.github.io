import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c as r,a as e,b as n,F as c,e as s,d as h,o as d}from"./app.22a70bca.js";const i={},u=s('<h1 id="how-to-detect-crash-of-a-web-page" tabindex="-1"><a class="header-anchor" href="#how-to-detect-crash-of-a-web-page" aria-hidden="true">#</a> How to detect crash of a web page?</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><p>A very interesting question. <code>onbeforeunload</code> could be used to let us know right before a page is unloaded.</p><p>But if the web page crashes, the JavaScript doesn&#39;t even have chance to run.</p><p>So how could we know that a web page crashed because of unexpected reasons?</p><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',6),p={href:"https://bigfrontend.dev/question/How-to-detect-crash-of-a-web-page",target:"_blank",rel:"noopener noreferrer"},f=h("Source From");function l(_,b){const a=t("ExternalLinkIcon");return d(),r(c,null,[u,e("p",null,[e("a",p,[f,n(a)])])],64)}var m=o(i,[["render",l],["__file","how-to-detect-crash-of-a-web-page.html.vue"]]);export{m as default};
