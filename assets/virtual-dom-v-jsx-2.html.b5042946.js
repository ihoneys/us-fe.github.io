import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";import{r as a,c as i,b as e,w as t,a as n,F as u,e as o,d as s,o as d}from"./app.22a70bca.js";const k={},m=o(`<h1 id="virtual-dom-v-jsx-2" tabindex="-1"><a class="header-anchor" href="#virtual-dom-v-jsx-2" aria-hidden="true">#</a> Virtual DOM V - JSX 2</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><blockquote><p>This is a follow-up on <a href="/problem/virtual-dom-iv-jsx-1">143. Virtual DOM IV - JSX 1</a>.</p></blockquote><p>Congratulations on your pass on problem 143!</p><p>Now in this problem, please modify your code to support following.</p><h3 id="_1-nesting-elements" tabindex="-1"><a class="header-anchor" href="#_1-nesting-elements" aria-hidden="true">#</a> 1. nesting elements</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token operator">&lt;</span>i<span class="token operator">&gt;</span><span class="token constant">BFE</span><span class="token punctuation">.</span>dev<span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span> <span class="token keyword">is</span> <span class="token operator">&lt;</span>b<span class="token operator">&gt;</span>cool<span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">&gt;</span><span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This means JSXChild needs to support JSXElement as well.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code>JSXChild:
<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  JSXText
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  JSXElement
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-functional-component" tabindex="-1"><a class="header-anchor" href="#_2-functional-component" aria-hidden="true">#</a> 2. Functional Component</h3><p>As a convention, intrinsic HTML tags are lower cases and <a href="/problem/virtual-DOM-III-Functional-Component">Functional Components</a> have capitalized initials.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">Heading</span> <span class="token operator">=</span> 
  <span class="token punctuation">(</span><span class="token punctuation">{</span>children<span class="token punctuation">,</span> <span class="token operator">...</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token operator">...</span>children<span class="token punctuation">)</span>
  
<span class="token operator">&lt;</span>Heading<span class="token operator">&gt;</span><span class="token constant">BFE</span><span class="token punctuation">.</span><span class="token operator">&lt;</span>i<span class="token operator">&gt;</span>dev<span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Heading<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If your code in problem 143 already supports this, that&#39;s fantastic \u{1F44D}! Just copy your code here and hope it shall pass.</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,14),v=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("code"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"string"),s(`
 * `),n("span",{class:"token keyword"},"@returns"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("any"),n("span",{class:"token punctuation"},"}")]),s(` AST 
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"parse"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"code"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("any"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"your"),s(` AST
 * `),n("span",{class:"token keyword"},"@returns"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("string"),n("span",{class:"token punctuation"},"}")]),s(` 
 */`)]),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"generate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"ast"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("pre",null,[n("code",null,`::: code-group-item typescript
`)],-1),b=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"JSXOpeningElement"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
  tag`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"JSXClosingElement"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
  tag`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"JSXChildren"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"Array"),n("span",{class:"token operator"},"<"),n("span",{class:"token builtin"},"string"),s(),n("span",{class:"token operator"},"|"),s(" JSXElement"),n("span",{class:"token operator"},">"),s(`

`),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"JSXElement"),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
  openingElement`),n("span",{class:"token operator"},":"),s(` JSXOpeningElement
  children`),n("span",{class:"token operator"},":"),s(` JSXChildren
  closingElement`),n("span",{class:"token operator"},":"),s(` JSXClosingElement
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"parse"),n("span",{class:"token punctuation"},"("),s("code"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(" JSXElement "),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"generate"),n("span",{class:"token punctuation"},"("),s("ast"),n("span",{class:"token operator"},":"),s(" JSXElement"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// your code here"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("p",null,":::",-1),f=o('<h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2><ul><li><a href="./Virtual-DOM-I">Virtual DOM I</a></li><li><a href="./virtual-dom-II-createElement">Virtual DOM II - createElement</a></li><li><a href="./virtual-DOM-III-Functional-Component">Virtual DOM III - Functional Component</a></li><li><a href="./virtual-dom-iv-jsx-1">Virtual DOM IV - JSX 1</a></li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',3),_={href:"https://bigfrontend.dev/problem/virtual-dom-v-jsx-2",target:"_blank",rel:"noopener noreferrer"},y=s("Source From");function x(S,I){const l=a("CodeGroupItem"),c=a("CodeGroup"),p=a("ExternalLinkIcon");return d(),i(u,null,[m,e(c,null,{default:t(()=>[e(l,{title:"javascript",active:""},{default:t(()=>[v]),_:1}),h,b,g]),_:1}),f,n("p",null,[n("a",_,[y,e(p)])])],64)}var C=r(k,[["render",x],["__file","virtual-dom-v-jsx-2.html.vue"]]);export{C as default};
