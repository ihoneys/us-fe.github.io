import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as a,c as i,a as n,b as s,w as o,F as r,d as e,e as u,o as d}from"./app.22a70bca.js";const m={},h=n("h1",{id:"implement-math-pow",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#implement-math-pow","aria-hidden":"true"},"#"),e(" implement "),n("code",null,"Math.pow()")],-1),k=n("h2",{id:"question",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#question","aria-hidden":"true"},"#"),e(" Question")],-1),b=e("Can you write your own "),v={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow",target:"_blank",rel:"noopener noreferrer"},_=e("Math.pow()"),f=e(" ? The power would only be integers."),w=u(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// 1</span>

<span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">// 1024</span>

<span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// 0.25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All inputs are safe.</p><p><strong>Follow-up</strong></p><p>You can easily solve this problem by multiplying the base one after another, but it is slow. For power of <code>n</code>, it is needed to do the multiplication <code>n</code> times, can you think of a faster solution ?</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,5),g=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * `),n("span",{class:"token keyword"},"@param"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("number"),n("span",{class:"token punctuation"},"}")]),e(),n("span",{class:"token parameter"},"base"),e(`
 * `),n("span",{class:"token keyword"},"@param"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("number"),n("span",{class:"token punctuation"},"}")]),e(),n("span",{class:"token parameter"},"power"),e(` - integer
 * `),n("span",{class:"token keyword"},"@return"),e(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),e("number"),n("span",{class:"token punctuation"},"}")]),e(`
 */`)]),e(`
`),n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token function"},"pow"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[e("base"),n("span",{class:"token punctuation"},","),e(" power")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token comment"},"// your code here"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("h2",{id:"source",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#source","aria-hidden":"true"},"#"),e(" Source")],-1),y={href:"https://bigfrontend.dev/problem/implement-Math-pow",target:"_blank",rel:"noopener noreferrer"},j=e("Source From");function C(F,G){const t=a("ExternalLinkIcon"),c=a("CodeGroupItem"),l=a("CodeGroup");return d(),i(r,null,[h,k,n("p",null,[b,n("a",v,[_,s(t)]),f]),w,s(l,null,{default:o(()=>[s(c,{title:"javascript",active:""},{default:o(()=>[g]),_:1})]),_:1}),x,n("p",null,[n("a",y,[j,s(t)])])],64)}var I=p(m,[["render",C],["__file","implement-math-pow.html.vue"]]);export{I as default};
