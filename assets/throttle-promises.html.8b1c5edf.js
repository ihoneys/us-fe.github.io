import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as s,c as p,b as e,w as t,a as n,F as u,e as o,d as a,o as d}from"./app.22a70bca.js";const m={},h=o(`<h1 id="throttle-promises" tabindex="-1"><a class="header-anchor" href="#throttle-promises" aria-hidden="true">#</a> throttle Promises</h1><h2 id="question" tabindex="-1"><a class="header-anchor" href="#question" aria-hidden="true">#</a> Question</h2><p>Say you need to fetch some data through 100 APIs, and as soon as possible.</p><p>If you use <code>Promise.all()</code>, 100 requests go to your server at the same time, which is a burden to low spec servers.</p><p>Can you <strong>throttle your API calls so that always maximum 5 API calls at the same time</strong>?</p><p>You are asked to create a general <code>throttlePromises()</code> which takes an array of functions returning promises, and a number indicating the maximum concurrent pending promises.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token function">throttleAsync</span><span class="token punctuation">(</span>callApis<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// the data is the same as \`Promise.all\` </span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// any error occurs in the callApis would be relayed here</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>By running above code, at any time, no more than 5 APIs are requested, so low spec servers are saved.</p><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>`,9),k=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[a(`/**
 * `),n("span",{class:"token keyword"},"@param"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(" Promise"),n("span",{class:"token punctuation"},"<"),a("any"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},"}")]),a(),n("span",{class:"token parameter"},"func"),a(`
 * `),n("span",{class:"token keyword"},"@param"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),a("number"),n("span",{class:"token punctuation"},"}")]),a(),n("span",{class:"token parameter"},"max"),a(`
 * `),n("span",{class:"token keyword"},"@return"),a(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),a("Promise"),n("span",{class:"token punctuation"},"}")]),a(`
 */`)]),a(`
`),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"throttlePromises"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[a("funcs"),n("span",{class:"token punctuation"},","),a(" max")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token comment"},"// your code here"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=o('<h2 id="related" tabindex="-1"><a class="header-anchor" href="#related" aria-hidden="true">#</a> Related</h2><ul><li><a href="./implement-basic-throttle">implement basic throttle()</a></li><li><a href="./implement-throttle-with-leading-and-trailing-option">implement throttle() with leading &amp; trailing option</a></li></ul><h2 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2>',3),b={href:"https://bigfrontend.dev/problem/throttle-Promises",target:"_blank",rel:"noopener noreferrer"},f=a("Source From");function _(g,y){const c=s("CodeGroupItem"),r=s("CodeGroup"),i=s("ExternalLinkIcon");return d(),p(u,null,[h,e(r,null,{default:t(()=>[e(c,{title:"javascript",active:""},{default:t(()=>[k]),_:1})]),_:1}),v,n("p",null,[n("a",b,[f,e(i)])])],64)}var P=l(m,[["render",_],["__file","throttle-promises.html.vue"]]);export{P as default};
